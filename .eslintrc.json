{
  "env": {
    "node": true
  },
  "root": true,
  "plugins": [
    "tsdoc"
  ],
  "parserOptions": {
    "ecmaVersion": 2022,
    "sourceType": "module",
    "project": "./tsconfig.dev.json"
  },
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "prettier",
    "prettier-jsdoc"
  ],
  "ignorePatterns": [
    "*.js",
    "!.projenrc.ts",
    "*.d.ts",
    "node_modules/",
    "*.generated.ts",
    "coverage",
    "!.projenrc.ts",
    "!projenrc/**/*.ts"
  ],
  "rules": {
    "@typescript-eslint/no-require-imports": [
      "error"
    ],
    "no-shadow": [
      "off"
    ],
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "@typescript-eslint/no-floating-promises": [
      "error"
    ],
    "no-return-await": [
      "off"
    ],
    "@typescript-eslint/return-await": [
      "error"
    ],
    "dot-notation": [
      "error"
    ],
    "@typescript-eslint/member-ordering": [
      "error",
      {
        "default": [
          "public-static-field",
          "public-static-method",
          "protected-static-field",
          "protected-static-method",
          "private-static-field",
          "private-static-method",
          "field",
          "constructor",
          "method"
        ]
      }
    ],
    "tsdoc/syntax": "warn",
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "@typescript-eslint/interface-name-prefix": "off",
    "@typescript-eslint/dot-notation": "warn",
    "@typescript-eslint/no-use-before-define": "off",
    "@typescript-eslint/no-unsafe-member-access": "off",
    "@typescript-eslint/no-unsafe-assignment": "off",
    "@typescript-eslint/no-unsafe-call": "off",
    "@typescript-eslint/no-unsafe-return": "off",
    "@typescript-eslint/restrict-template-expressions": "off",
    "@typescript-eslint/require-await": "off",
    "@typescript-eslint/explicit-module-boundary-types": "off",
    "@typescript-eslint/consistent-type-imports": [
      "error",
      {
        "prefer": "type-imports",
        "disallowTypeAnnotations": false
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "vars": "all",
        "args": "after-used",
        "ignoreRestSiblings": true,
        "caughtErrors": "all",
        "argsIgnorePattern": "^_"
      }
    ],
    "@typescript-eslint/unbound-method": [
      "error",
      {
        "ignoreStatic": true
      }
    ],
    "@typescript-eslint/no-namespace": [
      "warn",
      {
        "allowDeclarations": true
      }
    ],
    "@typescript-eslint/no-empty-interface": [
      "error",
      {
        "allowSingleExtends": true
      }
    ],
    "@typescript-eslint/restrict-plus-operands": "off",
    "@typescript-eslint/no-non-null-asserted-nullish-coalescing": "error",
    "@typescript-eslint/no-unnecessary-condition": "warn",
    "@typescript-eslint/non-nullable-type-assertion-style": "warn",
    "@typescript-eslint/prefer-for-of": "error",
    "@typescript-eslint/prefer-includes": "error",
    "@typescript-eslint/prefer-optional-chain": "error",
    "@typescript-eslint/prefer-nullish-coalescing": "error",
    "@typescript-eslint/prefer-reduce-type-parameter": "error",
    "@typescript-eslint/prefer-string-starts-ends-with": "error",
    "@typescript-eslint/promise-function-async": [
      "error",
      {
        "checkArrowFunctions": false
      }
    ],
    "@typescript-eslint/sort-type-union-intersection-members": "warn",
    "sort-imports": "off"
  },
  "overrides": [
    {
      "files": [
        ".projenrc.ts"
      ],
      "rules": {
        "@typescript-eslint/no-require-imports": "off",
        "import/no-extraneous-dependencies": "off"
      }
    },
    {
      "files": [
        "**/test/**/*.[jt]s?(x)",
        "**/?(*.)+(spec|test).[jt]s?(x)"
      ],
      "env": {
        "jest": true,
        "jest/globals": true
      },
      "globals": {
        "jest": "off"
      },
      "extends": [
        "plugin:jest/recommended",
        "plugin:jest/style",
        "plugin:jest-formatting/recommended"
      ],
      "rules": {
        "@typescript-eslint/no-unsafe-assignment": "off",
        "@typescript-eslint/no-non-null-assertion": "off",
        "@typescript-eslint/explicit-module-boundary-types": "off",
        "@typescript-eslint/no-var-requires": "off",
        "@typescript-eslint/unbound-method": "off",
        "jest/unbound-method": "error",
        "jest/expect-expect": [
          "error",
          {
            "assertFunctionNames": [
              "expect",
              "**.templateMatches",
              "**.resourceCountIs",
              "**.hasResourceProperties",
              "**.hasResource",
              "**.hasOutput",
              "**.hasMapping",
              "**.findMappings",
              "**.hasCondition",
              "**.hasConditions",
              "**.hasError",
              "**.hasWarning",
              "**.hasInfo"
            ]
          }
        ],
        "jest/valid-title": "off",
        "jest/no-disabled-tests": "off",
        "jest/no-conditional-expect": "warn",
        "jest/consistent-test-it": "off"
      }
    }
  ]
}
